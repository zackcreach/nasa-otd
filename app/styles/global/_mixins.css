/* Media Queries */

/*
Implement using:
	@mixin atSmall {
		property: value
	}
*/

@define-mixin atSmall {
	@media (min-width: 480px) {
		@mixin-content;
	}
}

@define-mixin atMedium {
	@media (min-width: 767px) {
		@mixin-content;
	}
}

@define-mixin atLarge {
	@media (min-width: 991px) {
		@mixin-content;
	}
}

@define-mixin atXLarge {
	@media (min-width: 1440px) {
		@mixin-content;
	}
}

@define-mixin clearfix {
	&::after {
		content: "";
		clear: both;
		display: table;
	}
}

/* CSS Parallax Scrolling */

/*
Implement using:
	@mixin parallax(-.5);
*/

/*$parallax-perspective : 1 !default;
$parallax-element     : "body" !default;
$parallax-ios         : true !default;*/

/*@define-mixin parallax-init(
  $perspective  : $parallax-perspective,
  $element      : $parallax-element,
  $parallax-ios : $parallax-ios
  ) {
  @if $element == "body" {
    html, body {
      width: 100%;
      height: 100%;
      margin: 0;
      padding: 0;
      overflow: hidden;
    }
  }
  $element {
    overflow: auto;
    perspective: $perspective * 1px;
    transform-style: preserve-3d;
    // Allows for smooth scrolling but disables parallax effects.
    @if $parallax-ios == false {
      -webkit-overflow-scrolling: touch;
    }
    // Preserve 3D
    &, * {
      transform-style: preserve-3d;
    }
  }
}*/

/*@define-mixin parallax(
  $distance    : 0,
  $perspective : $parallax-perspective
  ) {
  transform:
    translateZ($distance * $perspective * 1px)
    scale(abs($distance - 1))
  ;
  z-index: $distance * 1000;
}*/
